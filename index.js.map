{"version":3,"mappings":"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","names":["initIntlTelInput","phoneInputField","intlTelInput","serverURL","questions","showSuccessToast","message","iziToast","showErrorToast","currentQuestion","answers","showQuestion","quiz","optionsHtml","option","index","options","opt","handleNextQuestion","updateProgress","selectedOption","getAnswers","progress","sendFormData","formData","axios","validateEmail","email","validatePhoneNumber","validateName","name","showErrorUnderField","inputField","errorMessageElement","clearErrorUnderField","validateForm","form","nameInput","emailInput","nameError","emailError","phoneError","initFormValidation","event","submitButton","phoneNumber","error","_b","_a"],"ignoreList":[],"sources":["../src/js/intlTelInput.js","../src/js/constants.js","../src/js/iziToastConfig.js","../src/js/quizLogic.js","../src/js/apiService.js","../src/js/utils.js","../src/js/formValidation.js","../src/main.js"],"sourcesContent":["import intlTelInput from 'intl-tel-input';\nimport 'intl-tel-input/build/css/intlTelInput.css';\n\nexport default function initIntlTelInput(phoneInputField) {\n  if (phoneInputField) {\n    intlTelInput(phoneInputField, {\n      initialCountry: 'auto',\n      loadUtils: () => import('intl-tel-input/utils'),\n    });\n  } else {\n    console.error('Елемент #phone не знайдено.');\n  }\n}\n","export const serverURL = 'https://jsonplaceholder.typicode.com/posts';\n\nexport const questions = [\n  { question: 'Question 1', options: ['option 1', 'option 2', 'option 3'] },\n  { question: 'Question 2', options: ['option 1', 'option 2', 'option 3'] },\n  { question: 'Question 3', options: ['option 1', 'option 2', 'option 3'] },\n  { question: 'Question 4', options: ['option 1', 'option 2', 'option 3'] },\n  { question: 'Question 5', options: ['option 1', 'option 2', 'option 3'] },\n];\n","import iziToast from 'izitoast';\n\nexport function showSuccessToast(message) {\n  iziToast.success({\n    position: 'center',\n    theme: 'dark',\n    messageColor: 'green',\n    message: message,\n    progressBarColor: 'green',\n    transitionIn: 'fadeIn',\n    transitionOut: 'fadeOut',\n    timeout: 3000,\n  });\n}\n\nexport function showErrorToast(message) {\n  iziToast.error({\n    position: 'topRight',\n    theme: 'dark',\n    messageColor: 'red',\n    message: message,\n    progressBarColor: 'red',\n    transitionIn: 'fadeIn',\n    transitionOut: 'fadeOut',\n    timeout: 5000,\n  });\n}\n","import { questions } from './constants';\nimport { showErrorToast } from './iziToastConfig';\n\nlet currentQuestion = 0;\nlet answers = [];\n\nexport function showQuestion() {\n  const quiz = document.getElementById('quiz');\n  const currentOptions = questions[currentQuestion].options;\n\n  const optionsHtml = currentOptions\n    .map(\n      (option, index) => `\n        <li data-value=\"${option}\">\n          ${option}\n        </li>\n      `\n    )\n    .join('');\n\n  quiz.innerHTML = `\n    <h2>${questions[currentQuestion].question}</h2>\n    <ul class=\"options\">\n      ${optionsHtml}\n    </ul>\n  `;\n\n  const options = quiz.querySelectorAll('.options li');\n  options.forEach(option => {\n    option.addEventListener('click', () => {\n      options.forEach(opt => opt.classList.remove('selected'));\n      option.classList.add('selected');\n      handleNextQuestion();\n    });\n  });\n\n  updateProgress();\n}\n\nexport function handleNextQuestion() {\n  const selectedOption = document.querySelector('.options li.selected');\n  if (selectedOption) {\n    answers.push(selectedOption.dataset.value);\n    currentQuestion++;\n    if (currentQuestion < questions.length) {\n      showQuestion();\n    } else {\n      document.getElementById('quiz-container').style.display = 'none';\n      document.getElementById('registration-container').style.display = 'block';\n    }\n  } else {\n    showErrorToast('Please, choose an option');\n  }\n}\n\nexport function getAnswers() {\n  return answers;\n}\n\nfunction updateProgress() {\n  const progress = document.getElementById('progress');\n  if (progress) {\n    progress.innerHTML = `<span style=\"color: black;\">${\n      currentQuestion + 1\n    }</span><span style=\"color: rgb(68, 67, 67);\">/${questions.length}</span>`;\n  }\n}\n","import axios from 'axios';\nimport { serverURL } from './constants';\n\nexport async function sendFormData(formData) {\n  return axios.post(serverURL, formData, {\n    headers: {\n      'Content-Type': 'application/json',\n    },\n  });\n}\n","import intlTelInput from 'intl-tel-input';\n\nexport function validateEmail(email) {\n  const emailPattern = /^[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,}$/;\n  if (!emailPattern.test(email)) {\n    return 'Please, write a correct email (e.g., example@domain.com)';\n  }\n  return null;\n}\n\nexport function validatePhoneNumber(phoneInputField) {\n  if (!phoneInputField) {\n    return 'Phone input field is not provided';\n  }\n\n  const iti = intlTelInput.getInstance(phoneInputField);\n  if (!iti.isValidNumber()) {\n    return 'Please, enter a phone number in the correct format, such as +380XXXXXXXXX!';\n  }\n  return null;\n}\n\nexport function validateName(name) {\n  if (!name.trim()) {\n    return 'Please, write your name';\n  }\n\n  const nameRegex = /^[A-Za-zА-Яа-яІіЇїЄєҐґ'’\\-]+$/;\n  if (!nameRegex.test(name.trim())) {\n    return 'Name can only contain letters and special characters like apostrophes or dashes';\n  }\n\n  if (name.trim().length < 2 || name.trim().length > 50) {\n    return 'Name must be between 2 and 50 characters';\n  }\n\n  return null;\n}\n","import { validateEmail, validatePhoneNumber, validateName } from './utils';\n\nexport function showErrorUnderField(inputField, message) {\n  let errorMessageElement =\n    inputField.parentElement.querySelector('.error-message');\n  if (!errorMessageElement) {\n    errorMessageElement = document.createElement('div');\n    errorMessageElement.classList.add('error-message');\n    inputField.parentElement.appendChild(errorMessageElement);\n  }\n  errorMessageElement.textContent = message;\n}\n\nexport function clearErrorUnderField(inputField) {\n  const errorMessageElement =\n    inputField.parentElement.querySelector('.error-message');\n  if (errorMessageElement) {\n    errorMessageElement.textContent = '';\n  }\n}\n\nexport function validateForm(form, phoneInputField) {\n  const nameInput = form.querySelector('#name');\n  const emailInput = form.querySelector('.wt-email-input');\n\n  clearErrorUnderField(nameInput);\n  clearErrorUnderField(emailInput);\n  clearErrorUnderField(phoneInputField);\n\n  const nameError = validateName(nameInput.value);\n  if (nameError) {\n    showErrorUnderField(nameInput, nameError);\n    return false;\n  }\n\n  const emailError = validateEmail(emailInput.value.trim());\n  if (emailError) {\n    showErrorUnderField(emailInput, emailError);\n    return false;\n  }\n\n  const phoneError = validatePhoneNumber(phoneInputField);\n  if (phoneError) {\n    showErrorUnderField(phoneInputField, phoneError);\n    return false;\n  }\n\n  return true;\n}\n\nexport function initFormValidation(form, phoneInputField) {\n  const nameInput = form.querySelector('#name');\n  const emailInput = form.querySelector('.wt-email-input');\n\n  nameInput.addEventListener('blur', () => {\n    const nameError = validateName(nameInput.value);\n    if (nameError) {\n      showErrorUnderField(nameInput, nameError);\n    } else {\n      clearErrorUnderField(nameInput);\n    }\n  });\n\n  emailInput.addEventListener('blur', () => {\n    const emailError = validateEmail(emailInput.value.trim());\n    if (emailError) {\n      showErrorUnderField(emailInput, emailError);\n    } else {\n      clearErrorUnderField(emailInput);\n    }\n  });\n\n  phoneInputField.addEventListener('blur', () => {\n    const phoneError = validatePhoneNumber(phoneInputField);\n    if (phoneError) {\n      showErrorUnderField(phoneInputField, phoneError);\n    } else {\n      clearErrorUnderField(phoneInputField);\n    }\n  });\n}\n","import initIntlTelInput from './js/intlTelInput';\nimport { showQuestion, getAnswers } from './js/quizLogic';\nimport { sendFormData } from './js/apiService';\nimport { validateForm, initFormValidation } from './js/formValidation';\nimport { showSuccessToast, showErrorToast } from './js/iziToastConfig';\nimport intlTelInput from 'intl-tel-input';\n\ndocument.addEventListener('DOMContentLoaded', () => {\n  showQuestion();\n  initIntlTelInput(document.querySelector('.wt-phone-input'));\n  const form = document.querySelector('.wt-form');\n  const phoneInputField = document.querySelector('.wt-phone-input');\n\n  initFormValidation(form, phoneInputField);\n\n  form.addEventListener('submit', async event => {\n    event.preventDefault();\n\n    const submitButton = document.getElementById('submitButton');\n    if (submitButton) {\n      submitButton.disabled = true;\n      submitButton.textContent = 'Sending...';\n    }\n\n    if (!validateForm(form, phoneInputField)) {\n      if (submitButton) {\n        submitButton.disabled = false;\n        submitButton.textContent = 'Send';\n      }\n      return;\n    }\n\n    const phoneNumber = intlTelInput.getInstance(phoneInputField).getNumber();\n    const formData = {\n      name: form.querySelector('#name').value,\n      email: form.querySelector('.wt-email-input').value.trim(),\n      phone: phoneNumber,\n      answers: getAnswers(),\n    };\n\n    try {\n      await sendFormData(formData);\n      form.style.display = 'none';\n      showSuccessToast('You have successfully sent your answers!');\n    } catch (error) {\n      showErrorToast(\n        'Error: ' +\n          (error.response?.data?.message ||\n            'Something went wrong. Please, try again!')\n      );\n    } finally {\n      if (submitButton) {\n        submitButton.disabled = false;\n        submitButton.textContent = 'Send';\n      }\n    }\n  });\n});\n"],"file":"index.js"}