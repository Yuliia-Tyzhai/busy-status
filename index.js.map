{"version":3,"mappings":"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","names":["initIntlTelInput","phoneInputField","intlTelInput","n","serverURL","questions","showSuccessToast","message","iziToast","showErrorToast","currentQuestion","answers","showQuestion","quiz","optionsHtml","option","index","options","opt","handleNextQuestion","updateProgress","selectedOption","getAnswers","progress","sendFormData","formData","axios","validateEmail","email","validateForm","form","nameInput","emailInput","event","submitButton","phoneNumber","error","_b","_a"],"ignoreList":[],"sources":["../src/js/intlTelInput.js","../src/js/constants.js","../src/js/iziToastConfig.js","../src/js/quizLogic.js","../src/js/apiService.js","../src/js/utils.js","../src/js/formValidation.js","../src/main.js"],"sourcesContent":["import intlTelInput from 'intl-tel-input';\nimport 'intl-tel-input/build/css/intlTelInput.css';\n\nexport default function initIntlTelInput(phoneInputField) {\n  if (phoneInputField) {\n    intlTelInput(phoneInputField, {\n      initialCountry: 'all',\n      loadUtils: () => import('intl-tel-input/utils'),\n    });\n  } else {\n    console.error('Елемент #phone не знайдено.');\n  }\n}\n","export const serverURL = 'https://jsonplaceholder.typicode.com/posts';\n\nexport const questions = [\n  { question: 'Question 1', options: ['option 1', 'option 2', 'option 3'] },\n  { question: 'Question 2', options: ['option 1', 'option 2', 'option 3'] },\n  { question: 'Question 3', options: ['option 1', 'option 2', 'option 3'] },\n  { question: 'Question 4', options: ['option 1', 'option 2', 'option 3'] },\n  { question: 'Question 5', options: ['option 1', 'option 2', 'option 3'] },\n];\n","import iziToast from 'izitoast';\n\nexport function showSuccessToast(message) {\n  iziToast.success({\n    position: 'center',\n    theme: 'dark',\n    messageColor: 'green',\n    message: message,\n  });\n}\n\nexport function showErrorToast(message) {\n  iziToast.error({\n    position: 'topRight',\n    theme: 'dark',\n    messageColor: 'red',\n    message: message,\n  });\n}\n","import { questions } from './constants';\nimport { showErrorToast } from './iziToastConfig';\n\nlet currentQuestion = 0;\nlet answers = [];\n\nexport function showQuestion() {\n  const quiz = document.getElementById('quiz');\n  const currentOptions = questions[currentQuestion].options;\n\n  const optionsHtml = currentOptions\n    .map(\n      (option, index) => `\n        <li data-value=\"${option}\">\n          ${option}\n        </li>\n      `\n    )\n    .join('');\n\n  quiz.innerHTML = `\n    <h2>${questions[currentQuestion].question}</h2>\n    <ul class=\"options\">\n      ${optionsHtml}\n    </ul>\n  `;\n\n  const options = quiz.querySelectorAll('.options li');\n  options.forEach(option => {\n    option.addEventListener('click', () => {\n      options.forEach(opt => opt.classList.remove('selected'));\n      option.classList.add('selected');\n      handleNextQuestion();\n    });\n  });\n\n  updateProgress();\n}\n\nexport function handleNextQuestion() {\n  const selectedOption = document.querySelector('.options li.selected');\n  if (selectedOption) {\n    answers.push(selectedOption.dataset.value);\n    currentQuestion++;\n    if (currentQuestion < questions.length) {\n      showQuestion();\n    } else {\n      document.getElementById('quiz-container').style.display = 'none';\n      document.getElementById('registration-container').style.display = 'block';\n    }\n  } else {\n    showErrorToast('Please, choose an option');\n  }\n}\n\nexport function getAnswers() {\n  return answers;\n}\n\nfunction updateProgress() {\n  const progress = document.getElementById('progress');\n  if (progress) {\n    progress.innerHTML = `<span style=\"color: black;\">${\n      currentQuestion + 1\n    }</span><span style=\"color: rgb(68, 67, 67);\">/${questions.length}</span>`;\n  }\n}\n","import axios from 'axios';\nimport { serverURL } from './constants';\n\nexport async function sendFormData(formData) {\n  return axios.post(serverURL, formData, {\n    headers: {\n      'Content-Type': 'application/json',\n    },\n  });\n}\n","export function validateEmail(email) {\n  const emailPattern = /^[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,}$/;\n  return emailPattern.test(email);\n}\n","import { validateEmail } from './utils';\nimport { showErrorToast } from './iziToastConfig';\nimport intlTelInput from 'intl-tel-input';\n\nexport function validateForm(form, phoneInputField) {\n  const nameInput = form.querySelector('#name');\n  const emailInput = form.querySelector('.wt-email-input');\n\n  if (!nameInput.value.trim()) {\n    showErrorToast('Please, write your name');\n    return false;\n  }\n\n  if (!validateEmail(emailInput.value.trim())) {\n    showErrorToast('Please, write a correct email');\n    return false;\n  }\n\n  if (\n    !phoneInputField ||\n    !intlTelInput.getInstance(phoneInputField).isValidNumber()\n  ) {\n    showErrorToast(\n      'Please, enter a phone number in the correct format, such as +380XXXXXXXXX!'\n    );\n    return false;\n  }\n\n  return true;\n}\n","import initIntlTelInput from './js/intlTelInput';\nimport { showQuestion, getAnswers } from './js/quizLogic';\nimport { sendFormData } from './js/apiService';\nimport { validateForm } from './js/formValidation';\nimport { showSuccessToast, showErrorToast } from './js/iziToastConfig';\nimport intlTelInput from 'intl-tel-input';\n\ndocument.addEventListener('DOMContentLoaded', () => {\n  showQuestion();\n  initIntlTelInput(document.querySelector('.wt-phone-input'));\n\n  const form = document.querySelector('.wt-form');\n  form.addEventListener('submit', async event => {\n    event.preventDefault();\n    const submitButton = document.getElementById('submitButton');\n    if (submitButton) {\n      submitButton.disabled = true;\n      submitButton.textContent = 'Sending...';\n    } else {\n      return;\n    }\n\n    const phoneInputField = document.querySelector('.wt-phone-input');\n\n    if (!validateForm(form, phoneInputField)) {\n      if (submitButton) {\n        submitButton.disabled = false;\n        submitButton.textContent = 'Send';\n      }\n      return;\n    }\n\n    const phoneNumber = intlTelInput.getInstance(phoneInputField).getNumber();\n    const formData = {\n      name: form.querySelector('#name').value,\n      email: form.querySelector('.wt-email-input').value.trim(),\n      phone: phoneNumber,\n      answers: getAnswers(),\n    };\n\n    try {\n      await sendFormData(formData);\n\n      form.style.display = 'none';\n\n      showSuccessToast('You have successfully sent your answers!');\n    } catch (error) {\n      showErrorToast(\n        'Error: ' +\n          (error.response?.data?.message ||\n            'Something went wrong. Please, try again!')\n      );\n    } finally {\n      if (submitButton) {\n        submitButton.disabled = false;\n        submitButton.textContent = 'Send';\n      }\n    }\n  });\n});\n"],"file":"index.js"}